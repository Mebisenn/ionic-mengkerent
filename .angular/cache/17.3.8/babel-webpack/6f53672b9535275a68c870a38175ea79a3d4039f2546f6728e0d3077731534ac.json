{"ast":null,"code":"import _asyncToGenerator from \"C:/project_mengkerent/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _TermsService;\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ionic/storage-angular\";\nexport class TermsService {\n  constructor(http, storage) {\n    this.http = http;\n    this.storage = storage;\n    this.apiUrl = 'https://www.sipelantis.com/api/terms'; // Pastikan ini sesuai dengan route di Laravel\n  } // Inject Storage\n  getTerms() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const token = yield _this.storage.get('auth-token'); // Ambil token dari storage\n      const headers = new HttpHeaders({\n        Authorization: `Bearer ${token}` // Tambahkan header otorisasi\n      });\n      return _this.http.get(_this.apiUrl, {\n        headers\n      });\n    })();\n  }\n}\n_TermsService = TermsService;\n_TermsService.ɵfac = function TermsService_Factory(t) {\n  return new (t || _TermsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Storage));\n};\n_TermsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _TermsService,\n  factory: _TermsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","TermsService","constructor","http","storage","apiUrl","getTerms","_this","_asyncToGenerator","token","get","headers","Authorization","i0","ɵɵinject","i1","HttpClient","i2","Storage","factory","ɵfac","providedIn"],"sources":["C:\\project_mengkerent\\src\\app\\services\\terms.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Storage } from '@ionic/storage-angular'; // Tambahkan import Storage\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TermsService {\r\n  private apiUrl = 'https://www.sipelantis.com/api/terms'; // Pastikan ini sesuai dengan route di Laravel\r\n\r\n  constructor(private http: HttpClient, private storage: Storage) {} // Inject Storage\r\n\r\n  async getTerms(): Promise<Observable<any>> {\r\n    const token = await this.storage.get('auth-token'); // Ambil token dari storage\r\n\r\n    const headers = new HttpHeaders({\r\n      Authorization: `Bearer ${token}` // Tambahkan header otorisasi\r\n    });\r\n\r\n    return this.http.get<any>(this.apiUrl, { headers });\r\n  }\r\n}\r\n"],"mappings":";;AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAO9D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB,EAAUC,OAAgB;IAA1C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,OAAO,GAAPA,OAAO;IAF7C,KAAAC,MAAM,GAAG,sCAAsC,CAAC,CAAC;EAEQ,CAAC,CAAC;EAE7DC,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZ,MAAMC,KAAK,SAASF,KAAI,CAACH,OAAO,CAACM,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;MAEpD,MAAMC,OAAO,GAAG,IAAIX,WAAW,CAAC;QAC9BY,aAAa,EAAE,UAAUH,KAAK,EAAE,CAAC;OAClC,CAAC;MAEF,OAAOF,KAAI,CAACJ,IAAI,CAACO,GAAG,CAAMH,KAAI,CAACF,MAAM,EAAE;QAAEM;MAAO,CAAE,CAAC;IAAC;EACtD;;gBAbWV,YAAY;;mBAAZA,aAAY,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;AAAA;;SAAZjB,aAAY;EAAAkB,OAAA,EAAZlB,aAAY,CAAAmB,IAAA;EAAAC,UAAA,EAFX;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}