{"ast":null,"code":"import _asyncToGenerator from \"C:/project_mengkerent/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/storage-angular\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  var _AuthGuard;\n  class AuthGuard {\n    constructor(storage, router) {\n      this.storage = storage;\n      this.router = router;\n    }\n    canActivate() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.storage.create(); // Make sure storage is created\n        try {\n          const token = yield _this.storage.get('auth-token');\n          if (token) {\n            return true; // Continue navigation if token exists (user is logged in)\n          } else {\n            _this.router.navigate(['/login']); // Redirect to login page if no token\n            return false;\n          }\n        } catch (error) {\n          console.error('Error checking authentication:', error);\n          _this.router.navigate(['/login']); // Redirect to login page if there's an error\n          return false;\n        }\n      })();\n    }\n  }\n  _AuthGuard = AuthGuard;\n  _AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || _AuthGuard)(i0.ɵɵinject(i1.Storage), i0.ɵɵinject(i2.Router));\n  };\n  _AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _AuthGuard,\n    factory: _AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}