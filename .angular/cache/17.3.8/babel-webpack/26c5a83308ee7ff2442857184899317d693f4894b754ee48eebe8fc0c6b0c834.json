{"ast":null,"code":"import _asyncToGenerator from \"C:/project_mengkerent/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _PromoService;\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ionic/storage-angular\";\nexport class PromoService {\n  constructor(http, storage) {\n    this.http = http;\n    this.storage = storage;\n    this.apiUrl = 'https://www.sipelantis.com/api/data-content';\n  }\n  getPromo() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const token = yield _this.storage.get('auth-token');\n        if (!token) {\n          throw new Error('Unauthorized: Token not found.');\n        }\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n        return _this.http.get(_this.apiUrl, {\n          headers\n        }).pipe(catchError(error => {\n          if (error.status === 401) {\n            return throwError(() => new Error('Unauthorized: Please login to access promos.'));\n          } else {\n            return throwError(() => new Error('Error fetching promo: ' + error.message));\n          }\n        })).toPromise();\n      } catch (error) {\n        throw new Error('Error fetching promo: ' + error.message);\n      }\n    })();\n  }\n  addPromo(title, content) {\n    const addUrl = 'https://www.sipelantis.com/api/promo/add';\n    return this.http.post(addUrl, {\n      title,\n      content\n    }).pipe(catchError(error => {\n      return throwError(() => new Error('Error adding promo: ' + error.message));\n    }));\n  }\n}\n_PromoService = PromoService;\n_PromoService.ɵfac = function PromoService_Factory(t) {\n  return new (t || _PromoService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Storage));\n};\n_PromoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _PromoService,\n  factory: _PromoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","throwError","catchError","PromoService","constructor","http","storage","apiUrl","getPromo","_this","_asyncToGenerator","token","get","Error","headers","set","pipe","error","status","message","toPromise","addPromo","title","content","addUrl","post","i0","ɵɵinject","i1","HttpClient","i2","Storage","factory","ɵfac","providedIn"],"sources":["C:\\project_mengkerent\\src\\app\\services\\promo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Storage } from '@ionic/storage-angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PromoService {\r\n  private apiUrl = 'https://www.sipelantis.com/api/data-content';\r\n\r\n  constructor(private http: HttpClient, private storage: Storage) { }\r\n\r\n  async getPromo(): Promise<any> {\r\n    try {\r\n      const token = await this.storage.get('auth-token');\r\n      if (!token) {\r\n        throw new Error('Unauthorized: Token not found.');\r\n      }\r\n\r\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n      return this.http.get<any>(this.apiUrl, { headers }).pipe(\r\n        catchError((error: HttpErrorResponse) => {\r\n          if (error.status === 401) {\r\n            return throwError(() => new Error('Unauthorized: Please login to access promos.'));\r\n          } else {\r\n            return throwError(() => new Error('Error fetching promo: ' + error.message));\r\n          }\r\n        })\r\n      ).toPromise();\r\n    } catch (error: any) {\r\n      throw new Error('Error fetching promo: ' + error.message);\r\n    }\r\n  }\r\n\r\n  addPromo(title: string, content: string): Observable<any> {\r\n    const addUrl = 'https://www.sipelantis.com/api/promo/add';\r\n    return this.http.post(addUrl, { title, content }).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        return throwError(() => new Error('Error adding promo: ' + error.message));\r\n      })\r\n    );\r\n  }\r\n}"],"mappings":";;AACA,SAAqBA,WAAW,QAA2B,sBAAsB;AACjF,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;;AAM3C,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB,EAAUC,OAAgB;IAA1C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,OAAO,GAAPA,OAAO;IAF7C,KAAAC,MAAM,GAAG,6CAA6C;EAEI;EAE5DC,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZ,IAAI;QACF,MAAMC,KAAK,SAASF,KAAI,CAACH,OAAO,CAACM,GAAG,CAAC,YAAY,CAAC;QAClD,IAAI,CAACD,KAAK,EAAE;UACV,MAAM,IAAIE,KAAK,CAAC,gCAAgC,CAAC;;QAGnD,MAAMC,OAAO,GAAG,IAAId,WAAW,EAAE,CAACe,GAAG,CAAC,eAAe,EAAE,UAAUJ,KAAK,EAAE,CAAC;QACzE,OAAOF,KAAI,CAACJ,IAAI,CAACO,GAAG,CAAMH,KAAI,CAACF,MAAM,EAAE;UAAEO;QAAO,CAAE,CAAC,CAACE,IAAI,CACtDd,UAAU,CAAEe,KAAwB,IAAI;UACtC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;YACxB,OAAOjB,UAAU,CAAC,MAAM,IAAIY,KAAK,CAAC,8CAA8C,CAAC,CAAC;WACnF,MAAM;YACL,OAAOZ,UAAU,CAAC,MAAM,IAAIY,KAAK,CAAC,wBAAwB,GAAGI,KAAK,CAACE,OAAO,CAAC,CAAC;;QAEhF,CAAC,CAAC,CACH,CAACC,SAAS,EAAE;OACd,CAAC,OAAOH,KAAU,EAAE;QACnB,MAAM,IAAIJ,KAAK,CAAC,wBAAwB,GAAGI,KAAK,CAACE,OAAO,CAAC;;IAC1D;EACH;EAEAE,QAAQA,CAACC,KAAa,EAAEC,OAAe;IACrC,MAAMC,MAAM,GAAG,0CAA0C;IACzD,OAAO,IAAI,CAACnB,IAAI,CAACoB,IAAI,CAACD,MAAM,EAAE;MAAEF,KAAK;MAAEC;IAAO,CAAE,CAAC,CAACP,IAAI,CACpDd,UAAU,CAAEe,KAAwB,IAAI;MACtC,OAAOhB,UAAU,CAAC,MAAM,IAAIY,KAAK,CAAC,sBAAsB,GAAGI,KAAK,CAACE,OAAO,CAAC,CAAC;IAC5E,CAAC,CAAC,CACH;EACH;;gBAlCWhB,YAAY;;mBAAZA,aAAY,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;AAAA;;SAAZ5B,aAAY;EAAA6B,OAAA,EAAZ7B,aAAY,CAAA8B,IAAA;EAAAC,UAAA,EAFX;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}