{"ast":null,"code":"var _CarsService;\nimport { HttpHeaders } from '@angular/common/http';\nimport { from, throwError } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@ionic/storage-angular\";\nexport class CarsService {\n  constructor(http, storage) {\n    this.http = http;\n    this.storage = storage;\n    this.apiUrl = 'https://www.sipelantis.com/api/carunits';\n  }\n  getCars() {\n    return from(this.storage.get('auth-token')).pipe(switchMap(token => {\n      if (!token) {\n        return throwError('No token found');\n      }\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      return this.http.get(this.apiUrl, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('HTTP error:', error);\n        return throwError(error);\n      }));\n    }), catchError(error => {\n      console.error('Storage error:', error);\n      return throwError(error);\n    }));\n  }\n  getCarDetails(carId) {\n    return from(this.storage.get('auth-token')).pipe(switchMap(token => {\n      if (!token) {\n        return throwError('No token found');\n      }\n      const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\n      const url = `${this.apiUrl}/${carId}`;\n      return this.http.get(url, {\n        headers\n      }).pipe(catchError(error => {\n        console.error('HTTP error:', error);\n        return throwError(error);\n      }));\n    }), catchError(error => {\n      console.error('Storage error:', error);\n      return throwError(error);\n    }));\n  }\n}\n_CarsService = CarsService;\n_CarsService.ɵfac = function CarsService_Factory(t) {\n  return new (t || _CarsService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Storage));\n};\n_CarsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _CarsService,\n  factory: _CarsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","from","throwError","catchError","switchMap","CarsService","constructor","http","storage","apiUrl","getCars","get","pipe","token","headers","set","error","console","getCarDetails","carId","url","i0","ɵɵinject","i1","HttpClient","i2","Storage","factory","ɵfac","providedIn"],"sources":["C:\\project_mengkerent\\src\\app\\services\\cars.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, from, throwError } from 'rxjs';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport { Storage } from '@ionic/storage-angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CarsService {\r\n  private apiUrl = 'https://www.sipelantis.com/api/carunits';\r\n\r\n  constructor(private http: HttpClient, private storage: Storage) { }\r\n\r\n  getCars(): Observable<any> {\r\n    return from(this.storage.get('auth-token')).pipe(\r\n      switchMap(token => {\r\n        if (!token) {\r\n          return throwError('No token found');\r\n        }\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        return this.http.get<any>(this.apiUrl, { headers }).pipe(\r\n          catchError(error => {\r\n            console.error('HTTP error:', error);\r\n            return throwError(error);\r\n          })\r\n        );\r\n      }),\r\n      catchError(error => {\r\n        console.error('Storage error:', error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  getCarDetails(carId: number): Observable<any> { // Ganti nama metode menjadi getCarDetails\r\n    return from(this.storage.get('auth-token')).pipe(\r\n      switchMap(token => {\r\n        if (!token) {\r\n          return throwError('No token found');\r\n        }\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${token}`);\r\n        const url = `${this.apiUrl}/${carId}`;\r\n        return this.http.get<any>(url, { headers }).pipe(\r\n          catchError(error => {\r\n            console.error('HTTP error:', error);\r\n            return throwError(error);\r\n          })\r\n        );\r\n      }),\r\n      catchError(error => {\r\n        console.error('Storage error:', error);\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,IAAI,EAAEC,UAAU,QAAQ,MAAM;AACnD,SAASC,UAAU,EAAEC,SAAS,QAAQ,gBAAgB;;;;AAMtD,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,OAAgB;IAA1C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,OAAO,GAAPA,OAAO;IAF7C,KAAAC,MAAM,GAAG,yCAAyC;EAEQ;EAElEC,OAAOA,CAAA;IACL,OAAOT,IAAI,CAAC,IAAI,CAACO,OAAO,CAACG,GAAG,CAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAC9CR,SAAS,CAACS,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACV,OAAOX,UAAU,CAAC,gBAAgB,CAAC;;MAErC,MAAMY,OAAO,GAAG,IAAId,WAAW,EAAE,CAACe,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;MACzE,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAM,IAAI,CAACF,MAAM,EAAE;QAAEK;MAAO,CAAE,CAAC,CAACF,IAAI,CACtDT,UAAU,CAACa,KAAK,IAAG;QACjBC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnC,OAAOd,UAAU,CAACc,KAAK,CAAC;MAC1B,CAAC,CAAC,CACH;IACH,CAAC,CAAC,EACFb,UAAU,CAACa,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAOd,UAAU,CAACc,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;EAEAE,aAAaA,CAACC,KAAa;IACzB,OAAOlB,IAAI,CAAC,IAAI,CAACO,OAAO,CAACG,GAAG,CAAC,YAAY,CAAC,CAAC,CAACC,IAAI,CAC9CR,SAAS,CAACS,KAAK,IAAG;MAChB,IAAI,CAACA,KAAK,EAAE;QACV,OAAOX,UAAU,CAAC,gBAAgB,CAAC;;MAErC,MAAMY,OAAO,GAAG,IAAId,WAAW,EAAE,CAACe,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;MACzE,MAAMO,GAAG,GAAG,GAAG,IAAI,CAACX,MAAM,IAAIU,KAAK,EAAE;MACrC,OAAO,IAAI,CAACZ,IAAI,CAACI,GAAG,CAAMS,GAAG,EAAE;QAAEN;MAAO,CAAE,CAAC,CAACF,IAAI,CAC9CT,UAAU,CAACa,KAAK,IAAG;QACjBC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnC,OAAOd,UAAU,CAACc,KAAK,CAAC;MAC1B,CAAC,CAAC,CACH;IACH,CAAC,CAAC,EACFb,UAAU,CAACa,KAAK,IAAG;MACjBC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtC,OAAOd,UAAU,CAACc,KAAK,CAAC;IAC1B,CAAC,CAAC,CACH;EACH;;eA9CWX,WAAW;;mBAAXA,YAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,OAAA;AAAA;;SAAXrB,YAAW;EAAAsB,OAAA,EAAXtB,YAAW,CAAAuB,IAAA;EAAAC,UAAA,EAFV;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}